local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

local function CleanAC()
    
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    
    
    if Humanoid:FindFirstChild("PlatformStand") then
        Humanoid.PlatformStand = false
    end
    
   
    local oldVelocity = RootPart.Velocity
    RootPart.Velocity = Vector3.new(oldVelocity.X, math.clamp(oldVelocity.Y, -50, 50), oldVelocity.Z)
end

local SafePosition = RootPart.Position
local function ValidatePosition()
    local currentPos = RootPart.Position
    local distance = (currentPos - SafePosition).Magnitude
    
    
    if distance > 150 then
        RootPart.CFrame = CFrame.new(SafePosition + Vector3.new(0, 3, 0))
        return
    end
    
    
    if distance < 100 then
        SafePosition = currentPos
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    CleanAC()
    ValidatePosition()
    
   
    if math.random(1, 100) > 95 then
        RootPart.AssemblyLinearVelocity = Vector3.new(
            math.clamp(RootPart.Velocity.X, -100, 100),
            0,
            math.clamp(RootPart.Velocity.Z, -100, 100)
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    for _, part in pairs(Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = part.CanCollide
        end
    end
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "反作弊系统已加载",
    Text = "✔️ 位移验证系统激活\n✔️ 危险状态检测已绕过",
    Duration = 5
})
