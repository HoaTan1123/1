local Player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")

local Joypad = Instance.new("Frame")
Joypad.Size = UDim2.new(0.25, 0, 0.25, 0)
Joypad.Position = UDim2.new(0.1, 0, 0.65, 0)
Joypad.BackgroundTransparency = 0.8
Joypad.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Joypad.Parent = ScreenGui

local JoypadThumb = Instance.new("Frame")
JoypadThumb.Size = UDim2.new(0.3, 0, 0.3, 0)
JoypadThumb.AnchorPoint = Vector2.new(0.5, 0.5)
JoypadThumb.Position = UDim2.new(0.5, 0, 0.5, 0)
JoypadThumb.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
JoypadThumb.Parent = Joypad

local UpBtn = Instance.new("TextButton")
UpBtn.Size = UDim2.new(0.15, 0, 0.08, 0)
UpBtn.Position = UDim2.new(0.8, 0, 0.6, 0)
UpBtn.Text = "↑"
UpBtn.TextSize = 24
UpBtn.Parent = ScreenGui

local DownBtn = Instance.new("TextButton")
DownBtn.Size = UDim2.new(0.15, 0, 0.08, 0)
DownBtn.Position = UDim2.new(0.8, 0, 0.8, 0)
DownBtn.Text = "↓"
DownBtn.TextSize = 24
DownBtn.Parent = ScreenGui

local FlyBtn = Instance.new("TextButton")
FlyBtn.Size = UDim2.new(0.15, 0, 0.08, 0)
FlyBtn.Position = UDim2.new(0.8, 0, 0.7, 0)
FlyBtn.Text = "✈️"
FlyBtn.TextSize = 20
FlyBtn.Parent = ScreenGui

local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

for _, part in pairs(Character:GetDescendants()) do
    if part:IsA("BasePart") then
        part.CanCollide = false
        part.CanTouch = false
        part.Anchored = false
    end
end

for _, state in pairs(Enum.HumanoidStateType:GetEnumItems()) do
    pcall(function() Humanoid:SetStateEnabled(state, false) end)
end

local Flying = false
local FlySpeed = 16
local MoveVector = Vector2.new()
local VerticalInput = 0
local CurrentVelocity = Vector3.new()

local function UpdateMoveVector(touchPos)
    local center = Joypad.AbsolutePosition + Joypad.AbsoluteSize/2
    local relative = (touchPos - center) / (Joypad.AbsoluteSize.X/2)
    MoveVector = Vector2.new(
        math.clamp(relative.X, -1, 1),
        math.clamp(relative.Y, -1, 1)
    
    
    JoypadThumb.Position = UDim2.new(
        0.5 + MoveVector.X * 0.35, 0,
        0.5 + MoveVector.Y * 0.35, 0
    )
end

Joypad.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        UpdateMoveVector(input.Position)
    end
end)

Joypad.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        UpdateMoveVector(input.Position)
    end
end)

Joypad.InputEnded:Connect(function()
    MoveVector = Vector2.new()
    JoypadThumb.Position = UDim2.new(0.5, 0, 0.5, 0)
end)

UpBtn.MouseButton1Down:Connect(function() VerticalInput = 1 end)
UpBtn.MouseButton1Up:Connect(function() VerticalInput = 0 end)
DownBtn.MouseButton1Down:Connect(function() VerticalInput = -1 end)
DownBtn.MouseButton1Up:Connect(function() VerticalInput = 0 end)

FlyBtn.MouseButton1Click:Connect(function()
    Flying = not Flying
    FlyBtn.Text = Flying and "🚶" or "✈️"
    Humanoid.PlatformStand = Flying
end)

RunService.Heartbeat:Connect(function(delta)
    if not Flying then return end
    
    local camera = workspace.CurrentCamera
    local cameraCF = camera.CFrame
    
    
    local moveDir = (cameraCF.LookVector * MoveVector.Y 
                  + cameraCF.RightVector * MoveVector.X 
                  + Vector3.new(0, VerticalInput, 0))
    
    
    if moveDir.Magnitude > 0 then
        moveDir = moveDir.Unit
        CurrentVelocity = CurrentVelocity:Lerp(moveDir * FlySpeed, delta * 8)
    else
        
        CurrentVelocity = CurrentVelocity:Lerp(Vector3.new(0, 0.05 * math.sin(tick() * 3), delta * 5)
    end
    
    
    RootPart.AssemblyLinearVelocity = CurrentVelocity
    
    
    if CurrentVelocity.Magnitude > 2 then
        local targetCFrame = CFrame.lookAt(
            RootPart.Position,
            RootPart.Position + Vector3.new(cameraCF.LookVector.X, 0, cameraCF.LookVector.Z)
        )
        RootPart.CFrame = RootPart.CFrame:Lerp(targetCFrame, delta * 5)
    end
    
    
    if math.abs(VerticalInput) > 0.3 then
        local pitch = -VerticalInput * math.rad(30)
        RootPart.CFrame = RootPart.CFrame * CFrame.Angles(pitch, 0, 0)
    end
end)

task.spawn(function()
    while task.wait(0.5) do
        if Flying then
            
            FlySpeed = 14 + math.random() * 8
            
            
            if math.random() < 0.3 then
                CurrentVelocity = CurrentVelocity + Vector3.new(
                    math.random(-0.5, 0.5),
                    math.random(-0.3, 0.3),
                    math.random(-0.5, 0.5)
            end
        end
    end
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "🦅 自然飞行模式",
    Text = "左摇杆控制方向\n右侧按钮控制高度",
    Duration = 6
})
